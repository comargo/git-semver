# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: cyril-linux.local:5050/cyril/imperx_python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - python -m venv venv
  - source venv/bin/activate

build:
  stage: build
  script:
    - pip install tox tox-wheel
    - tox
    - mkdir -p ./dist
    - cp .tox/dist/*.whl ./dist
    - python ./setup.py sdist
  artifacts:
    when: always
    paths:
      - dist/
    reports:
      junit: report.xml

deploy:
  stage: deploy
  dependencies:
    - build
  variables:
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: ${CI_JOB_TOKEN}
    TWINE_CERT: /etc/ssl/certs/ca-certificates.crt
    TWINE_REPOSITORY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
  script:
    - pip install twine
    - python -m twine upload dist/*

release:
  stage: deploy
  dependencies:
    - build
  before_script:
    - curl --location --output /usr/local/bin/release-cli "https://release-cli-downloads.s3.amazonaws.com/latest/release-cli-linux-amd64"
    - chmod +x /usr/local/bin/release-cli
  script:
    - echo "Make new release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: '$CI_COMMIT_MESSAGE'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d.*/
